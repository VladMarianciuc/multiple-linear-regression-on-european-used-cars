[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Proiect Modele de Regresie",
    "section": "",
    "text": "Sunt mulți români care au sau doresc să-și ia o mașină la mâna a doua, iar motivul pentru care nu optează pentru una nouă este, aproape exclusiv, cel financiar. Evident, o mașină nouă este mai scumpă decât una veche. Dar cele vechi vin cu uzură variabilă și alte riscuri.\nPe lângă aspectele statice care influențează prețul unei mașini (precum puterea motorului sau capacitatea cilindrică), prețul unei mașini vechi este, în plus, influențat de uzura pe care aceasta a acumulat-o.\nCea mai importantă parte a unei mașini este motorul. Este de asemenea cea mai complexă parte, cu multe elemente care se învârt la viteze de mii de rotații pe minut. Prin urmare, uzura motorului este un factor cheie în evaluarea prețului unei mașini, iar un mod facil (deși nu tot timpul precis) pentru a evalua uzura motorului este distanța pe care mașina (motorul) a parcurs-o până într-un anumit moment, mai exact: kilometrajul mașinii.\nLuând în considerare faptul că primul lucru la care ne uităm când luăm o mașină este prețul, voi crea 2 modele de estimare, în medie, a acestuia luând în considerare kilometrajul mașinii, anul de producție, capacitatea și puterea motorului și tipul transmisiei."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Site realizat pentru prezentarea proiectului final la cursul Modele de Regresie, anul III, semestrul 2, Facultatea de Matematică și Informatică, Universitatea București.\nCe este roșie și miroase ca o vopsea albastră?"
  },
  {
    "objectID": "index.html#introducere",
    "href": "index.html#introducere",
    "title": "Proiect Modele de Regresie",
    "section": "",
    "text": "Sunt mulți români care au sau doresc să-și ia o mașină la mâna a doua, iar motivul pentru care nu optează pentru una nouă este, aproape exclusiv, cel financiar. Evident, o mașină nouă este mai scumpă decât una veche. Dar cele vechi vin cu uzură variabilă și alte riscuri.\nPe lângă aspectele statice care influențează prețul unei mașini (precum puterea motorului sau capacitatea cilindrică), prețul unei mașini vechi este, în plus, influențat de uzura pe care aceasta a acumulat-o.\nCea mai importantă parte a unei mașini este motorul. Este de asemenea cea mai complexă parte, cu multe elemente care se învârt la viteze de mii de rotații pe minut. Prin urmare, uzura motorului este un factor cheie în evaluarea prețului unei mașini, iar un mod facil (deși nu tot timpul precis) pentru a evalua uzura motorului este distanța pe care mașina (motorul) a parcurs-o până într-un anumit moment, mai exact: kilometrajul mașinii.\nLuând în considerare faptul că primul lucru la care ne uităm când luăm o mașină este prețul, voi crea 2 modele de estimare, în medie, a acestuia luând în considerare kilometrajul mașinii, anul de producție, capacitatea și puterea motorului și tipul transmisiei."
  },
  {
    "objectID": "index.html#metode",
    "href": "index.html#metode",
    "title": "Proiect Modele de Regresie",
    "section": "Metode",
    "text": "Metode\nPentru a face acest lucru:\n\nVoi lua un set de date ale masinilor vechi vandute in Europa.\nVoi curata setul de date de informatii gresite sau lipsa.\nPentru fiecare dintre parametrii pe care i-am amintit mai sus, voi folosi o heuristică în 2 pași. Voi extrage un subset din setul inițial după care voi plota histograma subsetului pentru a vedea dacă prezintă regularitate sau dacă subsetul este încă alterat.\nVoi alege din totalul producatorilor de masini pe cei 8 care ocupa volumul cel mai mare pe piata second-hand din Europa.\nPe acest set de date modificat, voi plota felul in care pretul se raporteaza la kilometraj pentru a crea o imagine de ansamblu.\nVoi alege aleatoriu un subset de 10000 de observatii din acest set pentru a putea face mai rapid calculele.\nPe acest subset voi plota distributia preturilor in functie de fiecare parametru si voi face pentru fiecare un model de regresie liniar si unul neliniar (pe care il voi reprezenta grafic).\nVoi reprezenta grafic reziduurile modelelor de mai sus.\nVoi crea un model de regresie multiplă liniară si unul neliniară pentru a estima, în medie, pretul in raport cu kilometrajul si anul de fabricatie.\nVoi reprezenta grafic în ecrane interactive aceste 2 modele.\nVoi crea un model de regresie multiplă liniară și unul neliniar pentru a estima, în medie, prețul în raport cu kilometrajul, anul de fabricație, capacitatea motorului, puterea motorului.\nVoi extrage coeficienții acestui ultim model și îi voi prezenta, comparativ, într-un tabel împreună cu coeficienții modelelor anterioare.\nVoi testa acest ultim model."
  },
  {
    "objectID": "index.html#rezultate",
    "href": "index.html#rezultate",
    "title": "Proiect Modele de Regresie",
    "section": "Rezultate",
    "text": "Rezultate\n\nI. Definirea setului de date\nÎncărcarea librăriilor pe care le voi folosi în acest proiect.\n\n\nCode\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(kableExtra)\nlibrary(knitr)\n\n\nSetul de date l-am luat de pe kaggle.com. Am ales acest set de date deoarece are date preluate din Europa. Este un set de date imens, cu 3.5 milioane de intrari. Din păcate multe sunt lipsă, completate greșit sau exagerat și va fi necesară o triere. Voi afișa numărul de intrări după fiecare triere.\n\n\nCode\ndata &lt;- read.csv('datasets\\\\cars.csv') \n\nsprintf(\"Setul de date conține %1.f intrări\", nrow(data))\n\n\n[1] \"Setul de date conține 3552912 intrări\"\n\n\nPuțină ordine, redenumirea coloanelor cu nume mai simple și intuitive, extragerea coloanelor care conțin parametrii de interes și eliminarea rândurilor care conțin celule goale.\n\n\nCode\ndata &lt;- data[-c(7, 8, 9, 11, 12, 13, 14, 15)] # pastrarea coloanelor cu datele pe care le voi folosi in modelul de regresie\n\ncolnames(data) &lt;- c('maker', 'model', 'mileage', 'year', 'engine', 'power', 'transmission', 'price') # redenumirea coloanelor cu nume mai simple si intuitive\n\ndata1 &lt;- data[-which(data$maker == \"\" | data$model == \"\" | data$transmission ==\"\"), ] # eliminarea randurilor care contin celule goale\n\nsprintf(\"Setul de date conține %1.f intrări\", nrow(data1))\n\n\n[1] \"Setul de date conține 1924154 intrări\"\n\n\nAici încep să aplic heuristici pentru a extrage intrările relevante. Pentru fiecare parametru vor fi 2 trieri:\n\nTrierea printr-o aplicarea unei heuristici de bun simți.\nPlotarea histogramei astfel rezultate.\nA doua triere bazată pe evaluarea vizuală a histogramei.\n\nTrierea dupa pret: Mă intersează piața mașinilor second-hand, zona de mijloc în care oamenii de rând caută o mașină pentru nevoile lor zilnice. Nu mă interesează, de exemplu, mașinile de epocă (care apar aici) și sunt rare dar au prețuri foarte mari ce pot debalansa modelul. De asemenea nu mă interesează rablele sau mașinile care sunt multe și vândute pentru piese (adică cele cu prețuri foarte mici).\n\n\nCode\ndata2 &lt;- subset(data1, price&lt;10^5 & price&gt;1000) # alegerea masinilor cu pret intre 1000 - 100k euro\n\nhist(data2$price, xlab='Preț (euro)', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după preț \\n - prima ajustare - \", breaks=50)\n\n\n\n\n\nCode\ndata2 &lt;- subset(data2, price&lt;5*10^4 & price&gt;2000) # alegerea masinilor cu pret intre 1000 - 50k euro\n\nhist(data2$price, xlab='Preț (euro)', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după preț \\n - a doua ajustare - \", breaks=50)\n\n\n\n\n\nCode\nsprintf(\"Setul de date conține %1.f intrări\", nrow(data2))\n\n\n[1] \"Setul de date conține 1460333 intrări\"\n\n\nTrierea dupa kilometraj:\n\n\nCode\ndata3 &lt;- subset(data2, mileage&lt;5*10^5 & mileage&gt;10000) # alegerea masinilor cu kilometraj intre 10k km - 500k km\n\nhist(data3$mileage, xlab='Kilometraj (km)', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după kilometraj \\n - prima ajustare - \", breaks=50)\n\n\n\n\n\nCode\ndata3 &lt;- subset(data3, mileage&lt;3.5*10^5 & mileage&gt;30000) # alegerea masinilor cu kilometraj intre 30k km - 350k km\n\nhist(data3$mileage, xlab='Kilometraj (km)', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după kilometraj \\n - a doua ajustare - \", breaks=50)\n\n\n\n\n\nCode\nsprintf(\"Setul de date conține %1.f intrări\", nrow(data3))\n\n\n[1] \"Setul de date conține 853687 intrări\"\n\n\nTrierea dupa anul de producție:\n\n\nCode\ndata4 &lt;- subset(data3, year&gt;1990)  # alegerea masinilor mai noi de 1990\n\nhist(data4$year, xlab='Anul de Fabricație', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după anul de fabricație \\n - prima ajustare - \", breaks=25)\n\n\n\n\n\nCode\ndata4 &lt;- subset(data4, year&gt;1995) # alegerea masinilor mai noi de 1995\n\nhist(data4$year, xlab='Anul de Fabricație', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după anul de fabricație \\n - a doua ajustare - \", breaks=25)\n\n\n\n\n\nCode\nsprintf(\"Setul de date conține %1.f intrări\", nrow(data4))\n\n\n[1] \"Setul de date conține 830997 intrări\"\n\n\nTrierea dupa capacitatea motorului:\n\n\nCode\ndata5 &lt;- subset(data4, engine&gt;500 & engine&lt;5000) # alegerea masinilor cu capacitate cilindrica intre 500 cm^3 - 5000 cm^3\n\nhist(data5$engine, xlab='Capacitate cilindrica (cm3)', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după capacitatea motorului \\n - prima ajustare - \")\n\n\n\n\n\nCode\ndata5 &lt;- subset(data5, engine&gt;500 & engine&lt;3500) # alegerea masinilor cu capacitate cilindrica intre 500 cm^3 - 3500 cm^3\n\nhist(data5$engine, xlab='Capacitate cilindrica (cm3)', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după capacitatea motorului \\n - a doua ajustare - \")\n\n\n\n\n\nCode\nsprintf(\"Setul de date conține %1.f intrări\", nrow(data5))\n\n\n[1] \"Setul de date conține 734703 intrări\"\n\n\nTrierea dupa puterea motorului:\n\n\nCode\ndata6 &lt;- subset(data5, power&gt;40 & power&lt;400) # alegerea masinilor cu putere intre 40 - 400 cai\n\nhist(data6$power, xlab='Cai Putere', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după puterea motorului \\n - prima ajustare - \")\n\n\n\n\n\nCode\ndata6 &lt;- subset(data6, power&gt;40 & power&lt;250) # alegerea masinilor cu putere intre 40 - 250 cai\n\nhist(data6$power, xlab='Cai Putere', ylab=\"Nr. Mașini\", main=\"Distribuția mașinilor după puterea motorului \\n - prima ajustare - \")\n\n\n\n\n\nCode\nsprintf(\"Setul de date conține %1.f intrări\", nrow(data6))\n\n\n[1] \"Setul de date conține 723570 intrări\"\n\n\nTrierea dupa cele mai vândute mărci de mașini second-hand în Europa:\n\n\nCode\n# s &lt;- data7 %&gt;%\n#   group_by(maker) %&gt;%\n#   tally(sort=TRUE)\n\ndata7 &lt;- data6[which(data6$maker==\"volkswagen\" |\n                      data6$maker==\"ford\" | \n                       data6$maker==\"renault\" |\n                       data6$maker==\"peugeot\" |\n                       data6$maker==\"bmw\" |\n                       data6$maker==\"opel\" |\n                       data6$maker==\"mercedes\" |\n                       data6$maker==\"audi\" |\n                       data6$maker==\"skoda\" |\n                       data6$maker==\"volvo\"),] # alegerea celor mai vandute 8 branduri de masini second-hand in Europa + Volvo (masina pe care o am eu)\n\ndata7$model &lt;- as.factor(data7$model)\ndata7$maker &lt;- as.factor(data7$maker)\ndata7$transmission &lt;- as.factor(data7$transmission)\n\nsprintf(\"Setul de date conține %1.f intrări\", nrow(data7))\n\n\n[1] \"Setul de date conține 466481 intrări\"\n\n\nCode\nsummary(data7)\n\n\n        maker            model           mileage            year     \n volkswagen:100709   golf   : 30783   Min.   : 30001   Min.   :1996  \n opel      : 75327   octavia: 25114   1st Qu.: 71750   1st Qu.:2006  \n audi      : 73928   astra  : 23234   Median :110000   Median :2010  \n ford      : 69400   focus  : 19888   Mean   :119608   Mean   :2009  \n skoda     : 53564   a3     : 19196   3rd Qu.:157936   3rd Qu.:2012  \n renault   : 27568   passat : 17200   Max.   :349990   Max.   :2016  \n (Other)   : 65985   (Other):331066                                  \n     engine         power        transmission      price      \n Min.   : 550   Min.   : 41.00   auto:102371   Min.   : 2000  \n 1st Qu.:1560   1st Qu.: 74.00   man :364110   1st Qu.: 4996  \n Median :1798   Median : 86.00                 Median : 8900  \n Mean   :1804   Mean   : 95.15                 Mean   :10718  \n 3rd Qu.:1984   3rd Qu.:110.00                 3rd Qu.:14025  \n Max.   :3498   Max.   :249.00                 Max.   :49999  \n                                                              \n\n\n\n\nII. Modele de regresie simple\nImaginea de ansamblu pe setul de date obținut. Preț vs Kilometraj. Observăm că trendul confirmă intuiția, anume că e de așteptat ca o mașină cu un rulaj mai mare să aibă, în medie, un preț mai mic decât mașini cu rulaj mai mic. De asemenea, observăm că mașinile cu transmisie automată sunt mai scumpe decât cele cu transmie manuală, lucru care este adevărat.\nAltă observație este că, în general, mașinile cu un rulaj mai mare au, în medie, o vechime mai mare, lucru ce se potrivește cu bunul mers al lucrurilor\n\n\nCode\nggplot(data7, aes(x = mileage, y = price, col = year)) + \n         geom_point(size=.1) +\n         labs(title = \"Preț vs Kilometraj \\n - colorare după Anul de Fabricație -\",\n              x = \"Kilometraj\",\n              y = \"Preț\")\n\n\n\n\n\nCode\nggplot(data7, aes(x = mileage, y = price, col = transmission)) + \n         geom_point(size=.1) +\n         labs(title = \"Preț vs Kilometraj \\n - colorare după Transmisie -\",\n              x = \"Kilometraj (km)\",\n              y = \"Preț (euro)\")\n\n\n\n\n\nAici aleg un subset de 10000 de observații din setul de mai sus, astfel calculatorul poate efectua mai rapid calculele. Pentru că selecția este aleatorie, setul nou rezultat va fi proporțional cu cel din care s-a făcut selecția și va păstra aceleași caracteristici.\n\n\nCode\ndata8 &lt;- data7[sample(nrow(data7), 10^4),]\n\n\n\n\nCode\nggplot(data8, aes(x = mileage, y = price, col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Preț vs Kilometraj \\n - model liniar -\",\n              x = \"Kilometraj (km)\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ x, col=\"black\")\n\n\n\n\n\nCode\nggplot(data8, aes(x = mileage, y = price, col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Preț vs Kilometraj \\n - model neliniar determinat -\",\n              x = \"Kilometraj (km)\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ I(x^(-1/100)), col = \"red\")\n\n\n\n\n\nCode\nggplot(data8, aes(x = mileage, y = price, col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Preț vs Kilometraj \\n - model neliniar cu curbe Bezier -\",\n              x = \"Kilometraj (km)\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ splines::bs(x, 3), col=\"orange\")\n\n\n\n\n\n\n\nCode\nmod_lin1 &lt;- lm(price~mileage, data=data8)\n\nmod_nelin_d1 &lt;- lm(price~I(mileage^(-1/100)), data=data8)\n\nmod_nelin_bs1 &lt;- lm(price~splines::bs(mileage, 3), data=data8)\n\nggplot(data8, aes(x = mileage, y = residuals(mod_lin1), col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Reziduuri \\n - model liniar -\",\n              x = \"Kilometraj (km)\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"black\", lwd=1)\n\n\n\n\n\nCode\nggplot(data8, aes(x = mileage, y = residuals(mod_nelin_d1), col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Reziduuri \\n - model neliniar determinat -\",\n              x = \"Kilometraj (km)\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"red\", lwd=1)\n\n\n\n\n\nCode\nggplot(data8, aes(x = mileage, y = residuals(mod_nelin_bs1), col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Reziduuri \\n - model cu curbe Bezier -\",\n              x = \"Kilometraj (km)\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"orange\", lwd=1)\n\n\n\n\n\n\n\nCode\nggplot(data8, aes(x = factor(year), y = price, col=transmission)) + \n         geom_boxplot() +\n         labs(title = \"Preț vs Anul de Fabricație \\n - model liniar -\",\n              x = \"An de Fabricație\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ x, col = \"black\", aes(group=1)) +\n        theme(axis.text.x = element_text(size=7, angle=45),\n              axis.text.y = element_text(size=7, angle=45))\n\n\n\n\n\nCode\nggplot(data8, aes(x = factor(year), y = price, col=transmission)) + \n         geom_boxplot() +\n         labs(title = \"Preț vs Anul de Fabricație \\n - model neliniar determinat -\",\n              x = \"An de Fabricație\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ I(x^3), col = \"red\", aes(group=1)) +\n        theme(axis.text.x = element_text(size=7, angle=45),\n              axis.text.y = element_text(size=7, angle=45))\n\n\n\n\n\nCode\nggplot(data8, aes(x = factor(year), y = price, col=transmission)) + \n         geom_boxplot() +\n         labs(title = \"Preț vs Anul de Fabricație \\n - model neliniar cu curbe Bezier -\",\n              x = \"An de Fabricație\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ splines::bs(x, 4), col = \"orange\", aes(group=1)) +\n        theme(axis.text.x = element_text(size=7, angle=45),\n              axis.text.y = element_text(size=7, angle=45))\n\n\n\n\n\n\n\nCode\nmod_lin2 &lt;- lm(price~year, data=data8)\n\nmod_nelin_d2 &lt;- lm(price~I(year^3), data=data8)\n\nmod_nelin_bs2 &lt;- lm(price~splines::bs(year, 4), data=data8)\n\nggplot(data8, aes(x = factor(year), y = residuals(mod_lin2), col = transmission)) + \n         geom_boxplot() +\n         labs(title = \"Reziduuri \\n - model liniar -\",\n              x = \"An de Fabricație\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"black\", lwd=1)+\n        theme(axis.text.x = element_text(size=7, angle=45),\n              axis.text.y = element_text(size=7, angle=45))\n\n\n\n\n\nCode\nggplot(data8, aes(x = factor(year), y=residuals(mod_nelin_d2), col=transmission)) +\n         geom_boxplot() +\n         labs(title = \"Reziduuri \\n - model neliniar determinat -\",\n              x = \"An de Fabricație\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"orange\", lwd=1)+\n        theme(axis.text.x = element_text(size=7, angle=45),\n              axis.text.y = element_text(size=7, angle=45))\n\n\n\n\n\nCode\nggplot(data8, aes(x = factor(year), y=residuals(mod_nelin_bs2), col=transmission)) +\n         geom_boxplot() +\n         labs(title = \"Reziduuri \\n - model neliniar cu curbe Bezier -\",\n              x = \"An de Fabricație\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"red\", lwd=1)+\n        theme(axis.text.x = element_text(size=7, angle=45),\n              axis.text.y = element_text(size=7, angle=45))\n\n\n\n\n\n\n\nCode\nggplot(data8, aes(x = engine, y = price, col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Preț vs Capacitatea motorului \\n - model liniar -\",\n              x = \"Capacitate cilindrică (cm3)\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ x, col=\"black\")\n\n\n\n\n\nCode\nggplot(data8, aes(x = engine, y = price, col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Preț vs Capacitatea motorului \\n - model neliniar cu curbe Bezier -\",\n              x = \"Capacitate cilindrică (cm3)\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ splines::bs(x, 3), col = \"red\")\n\n\n\n\n\n\n\nCode\nmod_lin3 &lt;- lm(price~engine, data=data8)\n\nmod_nelin_bs3 &lt;- lm(price~splines::bs(engine, 3), data=data8)\n\nggplot(data8, aes(x = engine, y = residuals(mod_lin3), col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Reziduuri \\n - model liniar -\",\n              x = \"Capacitate cilindrică (cm3)\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"black\", lwd=1)\n\n\n\n\n\nCode\nggplot(data8, aes(x = engine, y = residuals(mod_nelin_bs3), col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Reziduuri \\n - model cu curbe Bezier -\",\n              x = \"Capacitate cilindrică (cm3)\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"red\", lwd=1)\n\n\n\n\n\n\n\nCode\nggplot(data8, aes(x = power, y = price, col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Preț vs Puterea motorului \\n - model liniar -\",\n              x = \"Cai putere\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ x, col=\"black\")\n\n\n\n\n\nCode\nggplot(data8, aes(x = power, y = price, col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Preț vs Puterea motorului \\n - model neliniar cu curbe Bezier -\",\n              x = \"Cai putere (cm3)\",\n              y = \"Preț (euro)\") +\n        geom_smooth(method = \"lm\", formula = y ~ splines::bs(x, 4), col = \"red\")\n\n\n\n\n\n\n\nCode\nmod_lin4 &lt;- lm(price~power, data=data8)\n\nmod_nelin_bs4 &lt;- lm(price~splines::bs(power, 3), data=data8)\n\nggplot(data8, aes(x = power, y = residuals(mod_lin4), col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Reziduuri \\n - model liniar -\",\n              x = \"Cai putere\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"black\", lwd=1)\n\n\n\n\n\nCode\nggplot(data8, aes(x = power, y = residuals(mod_nelin_bs4), col = year)) + \n         geom_point(size=.5) +\n         labs(title = \"Reziduuri \\n - model cu curbe Bezier -\",\n              x = \"Cai putere\",\n              y = \"Reziduuri\") +\n        geom_abline(intercept=0, slope=0, col=\"red\", lwd=1)\n\n\n\n\n\n\n\nIII. Modele de regresie cu 2 parametri\n\n\nCode\ngrid.lines &lt;- 25\nx.pred &lt;- seq(min(data8$mileage), max(data8$mileage), length.out = grid.lines)\ny.pred &lt;- seq(min(data8$year), max(data8$year), length.out = grid.lines)\nxy &lt;- expand.grid(mileage = x.pred, year = y.pred)\n\nmod1_mile_year &lt;- lm(price ~ mileage+year, data=data8)\nmod2_mile_year &lt;- lm(price ~ I(mileage^(-1/100))+I(year^3), data=data8)\nmod3_mile_year &lt;- lm(price ~ I(mileage^(-1/100))+splines::bs(year, 4), data=data8)\n\nz.pred1 &lt;- matrix(predict(mod1_mile_year, newdata = xy), \n                 nrow = grid.lines, ncol = grid.lines)\n\nz.pred2 &lt;- matrix(predict(mod2_mile_year, newdata = xy), \n                 nrow = grid.lines, ncol = grid.lines)\n\nz.pred3 &lt;- matrix(predict(mod3_mile_year, newdata = xy), \n                 nrow = grid.lines, ncol = grid.lines)\n\n\n\n\nCode\nplot_ly( \n  data8, x = ~mileage, y = ~year, z = ~price, \n  color = ~transmission, colors = c('#BF382A', '#0C4B8E')\n  ) %&gt;%\n  add_markers(size=.1) %&gt;% \n  add_surface(x = ~x.pred, y = ~y.pred, z = t(z.pred1)) %&gt;%\n  layout(\n    scene = list(xaxis = list(title = 'Kilometraj (km)'),\n        yaxis = list(title = 'An de Frabricatie'),\n        zaxis = list(title = 'Pret (euro)'))\n        ) %&gt;% hide_colorbar()\n\n\n\n\n\n\n\n\nCode\nplot_ly(\n  data8, x = ~mileage, y = ~year, z = ~price, \n  color = ~transmission, colors = c('#BF382A', '#0C4B8E')\n  ) %&gt;%\n  add_markers(size=.1) %&gt;%\n  add_surface(x = ~x.pred, y = ~y.pred, z = t(z.pred3), opacity = 1) %&gt;%\n  layout(\n    scene = list(xaxis = list(title = 'Kilometraj (km)'),\n        yaxis = list(title = 'An de Frabricatie'),\n        zaxis = list(title = 'Pret (euro)'))\n        ) %&gt;% hide_colorbar()\n\n\n\n\n\n\n\n\nIV. Modele de regresie cu 4 parametri\n\n\nCode\ncoef_km_lin &lt;- round(coef(mod_lin1), 3)\ncoef_an_lin &lt;- round(coef(mod_lin2), 3)\ncoef_motor_lin &lt;- round(coef(mod_lin3), 3)\ncoef_putere_lin &lt;- round(coef(mod_lin4), 3)\nsuma &lt;- mean(coef_km_lin[1], coef_an_lin[1], coef_motor_lin[1], coef_putere_lin[1])\n\n\n\n\nCode\ncoef_km_nelin &lt;- round(coef(mod_nelin_bs1), 3)\ncoef_an_nelin &lt;- round(coef(mod_nelin_bs2), 3)\ncoef_motor_nelin &lt;- round(coef(mod_nelin_bs3), 3)\ncoef_putere_nelin &lt;- round(coef(mod_nelin_bs4), 3)\nsuma &lt;- mean(coef_km_nelin[1], coef_an_nelin[1], coef_motor_nelin[1], coef_putere_nelin[1])\n\n\n\n\nCode\nmod_final_liniar &lt;- lm(price~mileage+year+engine+power, data=data8)\ncoef_final_lin &lt;- round(coef(mod_final_liniar), 3)\n                            \nmod_final_neliniar_bs &lt;- lm(price~I(mileage^(-1/100))+splines::bs(year, 4)+engine+power, data=data8)\ncoef_final_nelin_bs &lt;- round(coef(mod_final_neliniar_bs), 3)\n\n\n\n\nCode\ncoeficienti &lt;- c(\"model separat\", \"model final\")\ntermen_liber &lt;- c(suma, coef_final_lin[1])\nkilometraj &lt;- c(coef_km_lin[2], coef_final_lin[2])\nan &lt;- c(coef_an_lin[2], coef_final_lin[3])\nmotor &lt;- c(coef_motor_lin[2], coef_final_lin[4])\nputere &lt;- c(coef_putere_lin[2], coef_final_lin[5])\n\ndf1 &lt;- data.frame(coeficienti, termen_liber, kilometraj, an, motor,putere)\n\ndf1 %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\n\n\ncoeficienti\ntermen_liber\nkilometraj\nan\nmotor\nputere\n\n\n\n\n\nmodel separat\n16611.9\n-0.051\n1236.989\n8.045\n141.806\n\n\n(Intercept)\nmodel final\n-1686468.3\n-0.032\n839.334\n3.365\n95.052\n\n\n\n\n\n\n\n\n\nCode\ncoeficienti &lt;- c(\"model separat\", \"model final\")\ntermen_liber &lt;- c(suma, coef_final_nelin_bs[1])\nf_kilometraj &lt;- c(coef_km_nelin[2], coef_final_nelin_bs[2])\nan1 &lt;- c(coef_an_nelin[2], coef_final_nelin_bs[3])\nan2 &lt;- c(coef_an_nelin[3], coef_final_nelin_bs[4])\nan3 &lt;- c(coef_an_nelin[4], coef_final_nelin_bs[5])\nan4 &lt;- c(coef_an_nelin[5], coef_final_nelin_bs[6])\nmotor &lt;- c(coef_motor_lin[2], coef_final_nelin_bs[7])\nputere &lt;- c(coef_putere_lin[2], coef_final_nelin_bs[8])\n\ndf2 &lt;- data.frame(coeficienti, termen_liber, f_kilometraj, an1, an2, an3, an4, motor,putere)\n\ndf2 %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\n\n\ncoeficienti\ntermen_liber\nf_kilometraj\nan1\nan2\nan3\nan4\nmotor\nputere\n\n\n\n\n\nmodel separat\n16611.9\n-9055.131\n-1299.446\n-1382.266\n15959.90\n15277.35\n8.045\n141.806\n\n\n(Intercept)\nmodel final\n-343292.7\n372926.427\n3692.018\n-464.751\n14220.33\n12189.61\n3.135\n96.954"
  },
  {
    "objectID": "index.html#discuții-și-concluzii",
    "href": "index.html#discuții-și-concluzii",
    "title": "Proiect Modele de Regresie",
    "section": "Discuții și concluzii",
    "text": "Discuții și concluzii\nFolosirea unui model de regresie este un instrument puternic, util atunci când vrei să faci predicții în baza unor seturi de date considerabile. Totuși este foarte important felul în care acest set de date este construit, triat, normalizat. Căci rezultatele vor fi pe măsura setului de date. Ideal este ca modelul nostru să aibă o varianță regulată astfel încât setul de date să nu dea valori cu abateri mari.\n\n\nCode\nnew &lt;- data.frame(mileage = 1.5*10^5, year=2008, engine=1600, power=90)\ndata_car &lt;- data7 %&gt;%\n  filter(maker==\"ford\" & model==\"focus\")\n\nmod_final_liniar1 &lt;- lm(price~mileage+year+engine+power, data=data_car)\nmod_final_neliniar_bs1 &lt;- lm(price~I(mileage^(-1/100))+splines::bs(year, 4)+engine+power, data=data_car)\n\npred1 &lt;- predict(mod_final_liniar1, newdata=new)\npred2 &lt;- predict(mod_final_neliniar_bs1, newdata=new)\n\nprint(\"Cât va costa, în medie, un Ford Focus din 2008, cu motor de 1600 cm3, 90 de cai putere și cu 150000 km?\")\n\n\n[1] \"Cât va costa, în medie, un Ford Focus din 2008, cu motor de 1600 cm3, 90 de cai putere și cu 150000 km?\"\n\n\nCode\nsprintf(\"Modelul liniar pe care l-am creat ne spune: %1.f euro\", pred1)\n\n\n[1] \"Modelul liniar pe care l-am creat ne spune: 6740 euro\"\n\n\nCode\nsprintf(\"Modelul neliniar pe care l-am creat ne spune: %1.f euro\", pred2)\n\n\n[1] \"Modelul neliniar pe care l-am creat ne spune: 6183 euro\"\n\n\nConform imaginii de mai jos, prezicerea nu este așa de precisă. Dar este pe acolo, este important de reamintit că acest model returnează o predicție în medie a prețului unei mașini second-hand în funcție de cei 4 parametrii. Numărul mare și diferit de mașini duc la o varianță a reziduurilor destul mare. Cu toate astea, acest set de date, din felul în care a fost construit, poate fi folosit pentru a obține prețuri pentru producători anume și chiar pentru modele anume. Astfel devine un instrument mai util și mai precis decât dacă vom căuta o mașină generică.\n\n\n\n\n\n\n\nCode\nnew1 &lt;- data.frame(mileage = .9*10^5, year=2010, engine=1600, power=100)\ndata_car1 &lt;- data7 %&gt;%\n  filter(maker==\"volvo\" & model==\"c30\")\n\nmod_final_liniar1 &lt;- lm(price~mileage+year+engine+power, data=data_car1)\nmod_final_neliniar_bs1 &lt;- lm(price~I(mileage^(-1/100))+splines::bs(year, 4)+engine+power, data=data_car1)\n\npred11 &lt;- predict(mod_final_liniar1, newdata=new1)\npred21 &lt;- predict(mod_final_neliniar_bs1, newdata=new1)\n\nprint(\"Cât va costa, în medie, un Volvo C30 din 2010, cu motor de 1600 cm3, 100 de cai putere și cu 90000 km?\")\n\n\n[1] \"Cât va costa, în medie, un Volvo C30 din 2010, cu motor de 1600 cm3, 100 de cai putere și cu 90000 km?\"\n\n\nCode\nsprintf(\"Modelul liniar pe care l-am creat ne spune: %1.f euro\", pred11)\n\n\n[1] \"Modelul liniar pe care l-am creat ne spune: 11208 euro\"\n\n\nCode\nsprintf(\"Modelul neliniar pe care l-am creat ne spune: %1.f euro\", pred21)\n\n\n[1] \"Modelul neliniar pe care l-am creat ne spune: 10592 euro\"\n\n\nAici, de exemplu, modelele ne oferă aceste cifre. Eu am achiziționat un Volvo C30 în Decembrie 2023 care se încadrează în acești parametri și am plătit pe el 4250 euro.\nO fi varianța de vină? Sau am prins eu un deal foarte bun? Poate puțin din ambele.\nVă mulțumesc\nÎn continuare găsiți o aplicație care folosește cele 2 modele de mai sus pentru a estima, în medie, prețul unor mașini din acest set de date. Puteți selecta parametrii în voie. Nu este cel mai precis model, dar a fost o plăcere să-l realizez și am învățat multe în acest proces. Have fun!\n#| standalone: true\n#| viewerHeight: 800\nlibrary(shiny)\nlibrary(bslib)\nlibrary(tidyverse)\n\ndata &lt;- read.csv(\"https://media.githubusercontent.com/media/VladMarianciuc/multiple-linear-regression-on-european-used-cars/main/datasets/date_masini_curate.csv\")\n\ntheme &lt;- bs_theme(font_scale = 1.5)\n\n# Define UI for app that draws a histogram ----\nui &lt;- page_fluid(\n  selectInput('maker','Selectează marca', unique(data$maker)),\n  uiOutput(\"mychoices\"),\n  sliderInput(\n    \"km\",\n    \"Kilometraj:\",\n    min = 30000,\n    max = 350000,\n    value = 100000\n  ),\n  sliderInput(\n    \"an\",\n    \"Anul de fabricație:\",\n    min = 1995,\n    max = 2016,\n    value = 2010\n  ),\n  sliderInput(\n    \"motor\",\n    \"Capacitate cilindrică:\",\n    min = 500,\n    max = 3500,\n    value = 1600\n  ),\n  sliderInput(\n    \"putere\",\n    \"Putere motor:\",\n    min = 40,\n    max = 250,\n    value = 100\n  ),\n  actionButton(\"trimite\", \"Estimează preț\"),\n  card(\n    verbatimTextOutput(\"pred1\"),\n    verbatimTextOutput(\"pred2\")\n  )\n)\n \nserver &lt;- function(input, output, session) {\n  output$mychoices &lt;- renderUI({\n    switch(input$maker,\n           'ford' = selectInput('model', \n                                   label = 'Selectează modelul',\n                                   unique(data[which(data$maker==\"ford\"),]$model)),\n           'skoda' = selectInput('model', \n                                   label = 'Selectează modelul', \n                                   unique(data[which(data$maker==\"skoda\"),]$model)),\n           'opel' = selectInput('model', \n                                   label = 'Selectează modelul', \n                                   unique(data[which(data$maker==\"opel\"),]$model)),\n           'audi' = selectInput('model', \n                                   label = 'Selectează modelul', \n                                   unique(data[which(data$maker==\"audi\"),]$model)),\n           'bmw' = selectInput('model', \n                                   label = 'Selectează modelul', \n                                   unique(data[which(data$maker==\"bmw\"),]$model)),\n           'volvo' = selectInput('model', \n                                   label = 'Selectează modelul', \n                                   unique(data[which(data$maker==\"volvo\"),]$model)),\n           'volkswagen' = selectInput('model', \n                                   label = 'Selectează modelul', \n                                   unique(data[which(data$maker==\"volkswagen\"),]$model)),\n           'renault' = selectInput('model', \n                                   label = 'Selectează modelul', \n                                   unique(data[which(data$maker==\"renault\"),]$model)),\n           'peugeot' = selectInput('model', \n                                   label = 'Selectează modelul', \n                                   unique(data[which(data$maker==\"peugeot\"),]$model)),)\n  })\n\n  new &lt;- reactiveValues(d=NA)\n\n  observeEvent(input$trimite, {\n    new$d &lt;- data.frame(mileage=input$km, year=input$an, engine=input$motor, power=input$putere)\n    data2 &lt;- data %&gt;% filter(maker==input$maker & model==input$model)\n    m1 &lt;- lm(price~mileage+year+engine+power, data=data2)\n    m2 &lt;- lm(price~I(mileage^(-1/100))+splines::bs(year, 4)+engine+power, data=data2)\n    pred1 &lt;- predict(m1, newdata=new$d)\n    pred2 &lt;- predict(m2, newdata=new$d)\n    output$pred1 &lt;- renderPrint({\n      sprintf(\"Estimarea modelului liniar este  %1.f Euro.\", pred1)\n    })\n    output$pred2 &lt;- renderPrint({\n      sprintf(\"Estimarea modelului neliniar este %1.f Euro.\", pred2)\n    })\n  })\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)\n\nReferințe\n(1) https://www.kaggle.com/datasets/nestorwinamo/used-car-database-in-europe\n(2) https://alexamarioarei.quarto.pub/curs-mreg-fmi/\n(3) https://www.youtube.com/playlist?list=PLbARZQfpqIKJcO4Srr6mnQorL3wFhiV7t"
  }
]